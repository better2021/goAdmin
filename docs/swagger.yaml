definitions:
  model.Book:
    properties:
      author:
        example: 作者
        type: string
      desc:
        example: 描述
        type: string
      id:
        type: integer
      title:
        example: 书籍名称
        type: string
      year:
        example: 年份
        type: string
    type: object
  model.Film:
    properties:
      actor:
        example: 演员
        type: string
      address:
        example: 出品地区
        type: string
      desc:
        example: 描述
        type: string
      id:
        type: integer
      name:
        example: 电影名称
        type: string
      year:
        example: 年份
        type: string
    type: object
  model.IpWhite:
    properties:
      id:
        type: integer
      ip:
        example: ip白名单
        type: string
    type: object
  model.Music:
    properties:
      actor:
        example: 作曲
        type: string
      desc:
        example: 描述
        type: string
      id:
        type: integer
      title:
        example: 歌曲名称
        type: string
      year:
        example: 年份
        type: string
    type: object
  model.Note:
    properties:
      context:
        example: 留言
        type: string
      icon:
        example: 用户头像
        type: string
      id:
        type: integer
      images:
        example: 图片集
        type: string
      userName:
        example: 用户名称
        type: string
    type: object
  model.User:
    properties:
      desc:
        type: string
      id:
        type: integer
      imgUrl:
        type: string
      ip:
        type: string
      name:
        example: 用户名称
        type: string
      password:
        description: 字段不暴露给用户，则使用 `json:"-"` 修饰
        example: 密码
        type: string
      telephone:
        example: 手机号码
        type: string
      themeColor:
        type: string
    type: object
info:
  contact: {}
  description: An example of gin
  license:
    name: MIT //localhost:80
  termsOfService: 运行地址：http://localhost/swagger/index.html
  title: Golang Gin API
  version: "2.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: 用户登陆
      parameters:
      - description: telephone
        in: query
        name: telephone
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 用户登陆
      tags:
      - 用户
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: name
        in: query
        name: name
        required: true
        type: string
      - description: telephone
        in: query
        name: telephone
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 用户注册
      tags:
      - 用户
  /api/books:
    get:
      consumes:
      - application/json
      description: 书籍列表
      parameters:
      - description: title
        in: query
        name: name
        type: string
      - description: pageNum
        in: query
        name: pageNum
        required: true
        type: string
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Book'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 获取书籍列表
      tags:
      - 书籍
    post:
      consumes:
      - application/json
      description: 创建书籍
      parameters:
      - description: title
        in: query
        name: name
        type: string
      - description: year
        in: query
        name: year
        type: string
      - description: author
        in: query
        name: actor
        type: string
      - description: desc
        in: query
        name: desc
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Book'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 创建书籍列表
      tags:
      - 书籍
  /api/books/{id}:
    delete:
      consumes:
      - application/json
      description: 书籍列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Book'
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 删除书籍列表
      tags:
      - 书籍
    put:
      consumes:
      - application/json
      description: 书籍列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Book'
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 更新书籍列表
      tags:
      - 书籍
  /api/films:
    get:
      consumes:
      - application/json
      description: 电影列表
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: pageNum
        in: query
        name: pageNum
        required: true
        type: string
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Film'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 获取电影列表
      tags:
      - 电影
    post:
      consumes:
      - application/json
      description: 创建电影
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: year
        in: query
        name: year
        type: string
      - description: address
        in: query
        name: address
        type: string
      - description: actor
        in: query
        name: actor
        type: string
      - description: desc
        in: query
        name: desc
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Film'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 创建电影列表
      tags:
      - 电影
  /api/films/{id}:
    delete:
      consumes:
      - application/json
      description: 电影列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Film'
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 删除电影列表
      tags:
      - 电影
    put:
      consumes:
      - application/json
      description: 电影列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Film'
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 更新电影列表
      tags:
      - 电影
  /api/getCode:
    get:
      consumes:
      - application/json
      description: 获取验证码
      produces:
      - application/json
      responses:
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 获取验证码
      tags:
      - 验证码
  /api/ipWhite:
    get:
      consumes:
      - application/json
      description: 白名单
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.IpWhite'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 白名单列表
      tags:
      - 白名单
    post:
      consumes:
      - application/json
      description: 创建白名单
      parameters:
      - description: ip
        in: query
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.IpWhite'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 创建白名单列表
      tags:
      - 白名单
  /api/ipWhite/{id}:
    delete:
      consumes:
      - application/json
      description: 白名单列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.IpWhite'
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 删除白名单列表
      tags:
      - 白名单
  /api/musics:
    get:
      consumes:
      - application/json
      description: 音乐列表
      parameters:
      - description: title
        in: query
        name: title
        type: string
      - description: pageNum
        in: query
        name: pageNum
        required: true
        type: string
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Music'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 获取音乐列表
      tags:
      - 音乐
    post:
      consumes:
      - application/json
      description: 创建音乐
      parameters:
      - description: title
        in: query
        name: title
        type: string
      - description: year
        in: query
        name: year
        type: string
      - description: author
        in: query
        name: actor
        type: string
      - description: desc
        in: query
        name: desc
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Music'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 创建音乐列表
      tags:
      - 音乐
  /api/musics/{id}:
    delete:
      consumes:
      - application/json
      description: 音乐列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Music'
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 删除音乐列表
      tags:
      - 音乐
    put:
      consumes:
      - application/json
      description: 音乐列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Music'
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 更新音乐列表
      tags:
      - 音乐
  /api/notes:
    get:
      consumes:
      - application/json
      description: 留言列表
      parameters:
      - description: pageNum
        in: query
        name: pageNum
        required: true
        type: string
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Note'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 获取留言列表
      tags:
      - 留言
    post:
      consumes:
      - application/json
      description: 创建留言
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Note'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 创建留言列表
      tags:
      - 留言
  /api/notes/{id}:
    delete:
      consumes:
      - application/json
      description: 留言列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Note'
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 删除留言列表
      tags:
      - 留言
  /api/upload:
    post:
      consumes:
      - multipart/form-data
      description: 文件上传
      parameters:
      - description: file
        in: query
        name: file
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "message": "上传成功" }'
          schema:
            type: string
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 单个文件上传
      tags:
      - 文件上传
  /api/uploads:
    post:
      consumes:
      - multipart/form-data
      description: 多文件上传
      parameters:
      - description: upload
        in: query
        name: file
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "message": "上传成功" }'
          schema:
            type: string
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 多个文件上传
      tags:
      - 多文件上传
  /api/users:
    get:
      consumes:
      - application/json
      description: 用户列表
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: telephone
        in: query
        name: telephone
        type: string
      - description: pageNum
        in: query
        name: pageNum
        required: true
        type: string
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 获取用户列表
      tags:
      - 用户
  /api/users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 删除用户
      tags:
      - 用户
    put:
      consumes:
      - application/json
      description: 用户信息
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 更新用户信息
      tags:
      - 用户
swagger: "2.0"
